# Step 1: Import Required Libraries
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report
import pandas as pd

# Step 2: Load the Iris Dataset
iris = load_iris()

# Features and Labels
X = iris.data      # feature values (sepal/petal length/width)
y = iris.target    # labels (0, 1, 2 corresponding to species)

# Optional: Convert to DataFrame for clarity
df = pd.DataFrame(X, columns=iris.feature_names)
df['species'] = pd.Categorical.from_codes(y, iris.target_names)

# Step 3: Split into Training and Test Sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Step 4: Initialize and Train Naive Bayes Classifier
model = GaussianNB()
model.fit(X_train, y_train)

# Step 5: Predict on Test Set
y_pred = model.predict(X_test)

# Step 6: Evaluate the Model
print("\n‚úÖ Accuracy:", accuracy_score(y_test, y_pred))
print("\nüìã Classification Report:\n", classification_report(y_test, y_pred, target_names=iris.target_names))

# Step 7: Predict on a New Sample
sample = [[5.1, 3.5, 1.4, 0.2]]  # Example: setosa-like flower
prediction = model.predict(sample)
print(f"\nüîç Predicted species for {sample[0]} is: {iris.target_names[prediction[0]]}")
